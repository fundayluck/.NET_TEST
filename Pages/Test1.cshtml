@page
@model Test1Model
@{
    ViewData["Title"] = "Test 1 Page";
}
<h1>@ViewData["Title"]</h1>

    <div class="autocomplete">
        <input type="text" id="countryInput" class="autocomplete-input" placeholder="Fill the country">
        <ul id="autocompleteList" class="autocomplete-list"></ul>
    </div>


@section Scripts {
    <script>
        const inputField = document.getElementById('countryInput');
        const searchInput = document.getElementById('searchInput');
        const autocompleteList = document.getElementById('autocompleteList');

        inputField.addEventListener('input', function () {
            const inputText = this.value.trim();
            if (inputText.length >= 3) {
                fetchCountries(inputText);
            } else {
                clearAutocompleteOptions();
            }
        });

        searchInput.addEventListener('input', function () {
            const inputText = this.value.trim();
            if (inputText.length >= 3) {
                fetchCountries(inputText);
            } else {
                clearAutocompleteOptions();
            }
        });

        function fetchCountries(inputText) {
            fetch('https://restcountries.com/v2/name/' + inputText)
                .then(response => response.json())
                .then(data => {
                    const countries = data.map(country => country.name);
                    displayAutocompleteOptions(countries);
                })
                .catch(error => console.error('Error:', error));
        }

        function displayAutocompleteOptions(options) {
            autocompleteList.innerHTML = '';
            options.forEach(option => {
                const listItem = document.createElement('li');
                listItem.textContent = option; // Sesuaikan dengan struktur data dari API
                listItem.addEventListener('click', function () {
                    inputField.value = option; // Sesuaikan dengan struktur data dari API
                    autocompleteList.innerHTML = '';
                });
                autocompleteList.appendChild(listItem);
            });
        }

        function clearAutocompleteOptions() {
            autocompleteList.innerHTML = '';
        }

        document.addEventListener('click', function (event) {
            if (!autocompleteList.contains(event.target) && event.target !== inputField && event.target !== searchInput) {
                autocompleteList.innerHTML = '';
            }
        });
    </script>
}

@section Styles {
    <style>
        .autocomplete {
            position: relative;
            width: 300px; /* Atur lebar sesuai kebutuhan */
        }

        .autocomplete-input {
            width: 100%;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 5px;
            outline: none;
        }

        .autocomplete-list {
            position: absolute;
            z-index: 1000;
            width: calc(100% - 2px);
            max-height: 200px; /* Atur tinggi maksimum sesuai kebutuhan */
            overflow-y: auto;
            margin: 0;
            padding: 0;
            list-style-type: none;
            border: 1px solid #ccc;
            border-top: none;
            border-radius: 0 0 5px 5px;
            background-color: #fff;
        }

        .autocomplete-list li {
            cursor: pointer;
            padding: 10px;
            border-bottom: 1px solid #ccc;
        }

        .autocomplete-list li:last-child {
            border-bottom: none;
        }

        .autocomplete-list li:hover {
            background-color: #f1f1f1;
        }
    </style>
}
